{
    "sourceFile": "src/views/password/components/PasswordFormDialog.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848151830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848151830,
            "name": "Commit-0",
            "content": "<template>\n  <el-dialog\n    :title=\"type === 'add' ? '新增密码' : '编辑密码'\"\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"form\"\n      :model=\"form\"\n      :rules=\"rules\"\n      label-width=\"80px\"\n      v-loading=\"loading\"\n    >\n      <el-form-item label=\"名称\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入名称\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"类型\" prop=\"type\">\n        <el-select v-model=\"form.type\" placeholder=\"请选择类型\" @change=\"handleTypeChange\">\n          <el-option label=\"用户名密码\" value=\"password\"></el-option>\n          <el-option label=\"SSH密钥\" value=\"ssh\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"form.username\" placeholder=\"请输入用户名\"></el-input>\n      </el-form-item>\n      <template v-if=\"form.type === 'password'\">\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input\n            v-model=\"form.confirmPassword\"\n            type=\"password\"\n            placeholder=\"请再次输入密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n      </template>\n      <template v-else>\n        <el-form-item label=\"私钥\" prop=\"privateKey\">\n          <el-input\n            v-model=\"form.privateKey\"\n            type=\"textarea\"\n            :rows=\"4\"\n            placeholder=\"请输入私钥\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"公钥\" prop=\"publicKey\">\n          <el-input\n            v-model=\"form.publicKey\"\n            type=\"textarea\"\n            :rows=\"4\"\n            placeholder=\"请输入公钥\"\n          ></el-input>\n        </el-form-item>\n      </template>\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input\n          v-model=\"form.remark\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入备注\"\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n        确 定\n      </el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { addPassword, updatePassword } from '@/api/password'\n\nexport default {\n  name: 'PasswordFormDialog',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    },\n    data: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      dialogVisible: false,\n      loading: false,\n      submitting: false,\n      form: {\n        name: '',\n        type: 'password',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        privateKey: '',\n        publicKey: '',\n        remark: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        type: [\n          { required: true, message: '请选择类型', trigger: 'change' }\n        ],\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ],\n        privateKey: [\n          { required: true, message: '请输入私钥', trigger: 'blur' }\n        ],\n        publicKey: [\n          { required: true, message: '请输入公钥', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n    visible(val) {\n      this.dialogVisible = val\n    },\n    dialogVisible(val) {\n      this.$emit('update:visible', val)\n    },\n    data: {\n      handler(val) {\n        if (val) {\n          this.form = { ...val }\n        } else {\n          this.resetForm()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    resetForm() {\n      this.form = {\n        name: '',\n        type: 'password',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        privateKey: '',\n        publicKey: '',\n        remark: ''\n      }\n    },\n    handleTypeChange() {\n      this.$refs.form.clearValidate()\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.form.validate()\n        this.submitting = true\n        \n        const params = { ...this.form }\n        delete params.confirmPassword\n        \n        if (this.type === 'add') {\n          await addPassword(params)\n          this.$message.success('添加成功')\n        } else {\n          await updatePassword(params)\n          this.$message.success('更新成功')\n        }\n        \n        this.$emit('success')\n      } catch (error) {\n        console.error(error)\n      }\n      this.submitting = false\n    },\n    handleClose() {\n      this.$refs.form.resetFields()\n    }\n  }\n}\n</script> "
        }
    ]
}