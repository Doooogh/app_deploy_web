{
    "sourceFile": "src/views/host/index.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848323542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848323542,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"page-container\">\n    <div class=\"search-form\">\n      <el-form :inline=\"true\" :model=\"searchForm\" ref=\"searchForm\">\n        <el-form-item label=\"环境\">\n          <el-select v-model=\"searchForm.envId\" placeholder=\"请选择环境\" clearable>\n            <el-option\n              v-for=\"item in envOptions\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"主机名\">\n          <el-input v-model=\"searchForm.name\" placeholder=\"请输入主机名\" clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"IP地址\">\n          <el-input v-model=\"searchForm.ip\" placeholder=\"请输入IP地址\" clearable></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\n          <el-button @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div class=\"operation-group\">\n      <el-button type=\"primary\" @click=\"handleAdd\">新增主机</el-button>\n      <el-button type=\"primary\" @click=\"handleBatchTest\">批量测试连接</el-button>\n      <el-button type=\"danger\" :disabled=\"!selectedIds.length\" @click=\"handleBatchDelete\">批量删除</el-button>\n    </div>\n\n    <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"主机名称\" min-width=\"120\"></el-table-column>\n      <el-table-column prop=\"envName\" label=\"所属环境\" width=\"120\"></el-table-column>\n      <el-table-column prop=\"ip\" label=\"IP地址\" width=\"140\"></el-table-column>\n      <el-table-column prop=\"port\" label=\"SSH端口\" width=\"100\"></el-table-column>\n      <el-table-column prop=\"username\" label=\"用户名\" width=\"120\"></el-table-column>\n      <el-table-column prop=\"authType\" label=\"认证方式\" width=\"100\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.authType === 'password' ? '密码' : '密钥' }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" width=\"100\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n            {{ scope.row.status === 1 ? '在线' : '离线' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"280\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"text\" @click=\"handleTest(scope.row)\">测试连接</el-button>\n          <el-button type=\"text\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button type=\"text\" @click=\"handleViewInfo(scope.row)\">系统信息</el-button>\n          <el-button type=\"text\" class=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      :current-page=\"page.current\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :page-size=\"page.size\"\n      :total=\"page.total\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    ></el-pagination>\n\n    <!-- 主机表单弹窗 -->\n    <host-form-dialog\n      :visible.sync=\"formDialog.visible\"\n      :type=\"formDialog.type\"\n      :data=\"formDialog.data\"\n      :env-options=\"envOptions\"\n      @success=\"handleFormSuccess\"\n    ></host-form-dialog>\n\n    <!-- 系统信息弹窗 -->\n    <el-dialog\n      :title=\"`${currentHost.name} - 系统信息`\"\n      :visible.sync=\"infoDialog.visible\"\n      width=\"600px\"\n    >\n      <div v-loading=\"infoDialog.loading\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"操作系统\">{{ infoDialog.data.os }}</el-descriptions-item>\n          <el-descriptions-item label=\"内核版本\">{{ infoDialog.data.kernel }}</el-descriptions-item>\n          <el-descriptions-item label=\"CPU\">{{ infoDialog.data.cpu }}</el-descriptions-item>\n          <el-descriptions-item label=\"内存\">{{ infoDialog.data.memory }}</el-descriptions-item>\n          <el-descriptions-item label=\"磁盘\">{{ infoDialog.data.disk }}</el-descriptions-item>\n          <el-descriptions-item label=\"运行时间\">{{ infoDialog.data.uptime }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { \n  getHostList, \n  deleteHost, \n  batchDeleteHost,\n  testHostConnection,\n  batchTestConnection,\n  getHostSystemInfo\n} from '@/api/host'\nimport { getEnvironmentList } from '@/api/environment'\nimport HostFormDialog from './components/HostFormDialog.vue'\n\nexport default {\n  name: 'Host',\n  components: {\n    HostFormDialog\n  },\n  data() {\n    return {\n      loading: false,\n      searchForm: {\n        envId: '',\n        name: '',\n        ip: ''\n      },\n      envOptions: [],\n      tableData: [],\n      selectedIds: [],\n      page: {\n        current: 1,\n        size: 10,\n        total: 0\n      },\n      formDialog: {\n        visible: false,\n        type: 'add',\n        data: null\n      },\n      infoDialog: {\n        visible: false,\n        loading: false,\n        data: {}\n      },\n      currentHost: {}\n    }\n  },\n  created() {\n    this.getEnvList()\n    this.getList()\n  },\n  methods: {\n    async getEnvList() {\n      try {\n        const { data } = await getEnvironmentList()\n        this.envOptions = data.filter(item => item.status === 1)\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async getList() {\n      this.loading = true\n      try {\n        const { data } = await getHostList({\n          ...this.searchForm,\n          page: this.page.current,\n          size: this.page.size\n        })\n        this.tableData = data.list\n        this.page.total = data.total\n      } catch (error) {\n        console.error(error)\n      }\n      this.loading = false\n    },\n    handleSearch() {\n      this.page.current = 1\n      this.getList()\n    },\n    resetSearch() {\n      this.$refs.searchForm.resetFields()\n      this.handleSearch()\n    },\n    handleSelectionChange(selection) {\n      this.selectedIds = selection.map(item => item.id)\n    },\n    handleAdd() {\n      this.formDialog.type = 'add'\n      this.formDialog.data = null\n      this.formDialog.visible = true\n    },\n    handleEdit(row) {\n      this.formDialog.type = 'edit'\n      this.formDialog.data = { ...row }\n      this.formDialog.visible = true\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该主机?', '提示', {\n          type: 'warning'\n        })\n        await deleteHost(row.id)\n        this.$message.success('删除成功')\n        this.getList()\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async handleBatchDelete() {\n      try {\n        await this.$confirm(`确认删除选中的 ${this.selectedIds.length} 台主机?`, '提示', {\n          type: 'warning'\n        })\n        await batchDeleteHost(this.selectedIds)\n        this.$message.success('删除成功')\n        this.getList()\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async handleTest(row) {\n      try {\n        await testHostConnection(row.id)\n        this.$message.success('连接成功')\n        this.getList()\n      } catch (error) {\n        this.$message.error('连接失败')\n      }\n    },\n    async handleBatchTest() {\n      const loading = this.$loading({\n        text: '正在测试连接...'\n      })\n      try {\n        await batchTestConnection()\n        this.$message.success('测试完成')\n        this.getList()\n      } catch (error) {\n        console.error(error)\n      }\n      loading.close()\n    },\n    async handleViewInfo(row) {\n      this.currentHost = row\n      this.infoDialog.visible = true\n      this.infoDialog.loading = true\n      try {\n        const { data } = await getHostSystemInfo(row.id)\n        this.infoDialog.data = data\n      } catch (error) {\n        console.error(error)\n      }\n      this.infoDialog.loading = false\n    },\n    handleFormSuccess() {\n      this.formDialog.visible = false\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.page.size = val\n      this.getList()\n    },\n    handleCurrentChange(val) {\n      this.page.current = val\n      this.getList()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.danger {\n  color: $--color-danger;\n}\n</style> "
        }
    ]
}