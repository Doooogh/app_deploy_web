{
    "sourceFile": "src/views/host/components/HostFormDialog.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848323543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848323543,
            "name": "Commit-0",
            "content": "<template>\n  <el-dialog\n    :title=\"type === 'add' ? '新增主机' : '编辑主机'\"\n    :visible.sync=\"dialogVisible\"\n    width=\"600px\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"form\"\n      :model=\"form\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      v-loading=\"loading\"\n    >\n      <el-form-item label=\"主机名称\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入主机名称\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"所属环境\" prop=\"envId\">\n        <el-select v-model=\"form.envId\" placeholder=\"请选择环境\">\n          <el-option\n            v-for=\"item in envOptions\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"IP地址\" prop=\"ip\">\n        <el-input v-model=\"form.ip\" placeholder=\"请输入IP地址\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"SSH端口\" prop=\"port\">\n        <el-input-number v-model=\"form.port\" :min=\"1\" :max=\"65535\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"form.username\" placeholder=\"请输入用户名\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"认证方式\" prop=\"authType\">\n        <el-radio-group v-model=\"form.authType\">\n          <el-radio label=\"password\">密码</el-radio>\n          <el-radio label=\"key\">密钥</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"认证信息\" prop=\"authId\">\n        <el-select \n          v-model=\"form.authId\" \n          placeholder=\"请选择认证信息\"\n          filterable\n        >\n          <el-option\n            v-for=\"item in authOptions\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\"\n            :disabled=\"item.type !== form.authType\"\n          ></el-option>\n        </el-select>\n        <div class=\"form-tip\">\n          <el-link type=\"primary\" @click=\"handleAddAuth\">新增认证信息</el-link>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input\n          v-model=\"form.remark\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输��备注\"\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n        确 定\n      </el-button>\n    </div>\n\n    <!-- 新增认证信息弹窗 -->\n    <password-form-dialog\n      :visible.sync=\"passwordDialog.visible\"\n      type=\"add\"\n      @success=\"handleAuthSuccess\"\n    ></password-form-dialog>\n  </el-dialog>\n</template>\n\n<script>\nimport { addHost, updateHost } from '@/api/host'\nimport { getPasswordList } from '@/api/password'\nimport PasswordFormDialog from '@/views/password/components/PasswordFormDialog.vue'\n\nexport default {\n  name: 'HostFormDialog',\n  components: {\n    PasswordFormDialog\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    },\n    data: {\n      type: Object,\n      default: null\n    },\n    envOptions: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      loading: false,\n      submitting: false,\n      form: {\n        name: '',\n        envId: '',\n        ip: '',\n        port: 22,\n        username: '',\n        authType: 'password',\n        authId: '',\n        remark: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入主机名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        envId: [\n          { required: true, message: '请选择环境', trigger: 'change' }\n        ],\n        ip: [\n          { required: true, message: '请输入IP地址', trigger: 'blur' },\n          { pattern: /^(\\d{1,3}\\.){3}\\d{1,3}$/, message: 'IP地址格式不正确', trigger: 'blur' }\n        ],\n        port: [\n          { required: true, message: '请输入SSH端口', trigger: 'blur' }\n        ],\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        authType: [\n          { required: true, message: '请选择认证方式', trigger: 'change' }\n        ],\n        authId: [\n          { required: true, message: '请选择认证信息', trigger: 'change' }\n        ]\n      },\n      authOptions: [],\n      passwordDialog: {\n        visible: false\n      }\n    }\n  },\n  watch: {\n    visible(val) {\n      this.dialogVisible = val\n      if (val) {\n        this.getAuthList()\n      }\n    },\n    dialogVisible(val) {\n      this.$emit('update:visible', val)\n    },\n    data: {\n      handler(val) {\n        if (val) {\n          this.form = { ...val }\n        } else {\n          this.resetForm()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async getAuthList() {\n      try {\n        const { data } = await getPasswordList()\n        this.authOptions = data.list\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    resetForm() {\n      this.form = {\n        name: '',\n        envId: '',\n        ip: '',\n        port: 22,\n        username: '',\n        authType: 'password',\n        authId: '',\n        remark: ''\n      }\n    },\n    handleAddAuth() {\n      this.passwordDialog.visible = true\n    },\n    async handleAuthSuccess() {\n      this.passwordDialog.visible = false\n      await this.getAuthList()\n      this.$message.success('添加成功')\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.form.validate()\n        this.submitting = true\n        \n        if (this.type === 'add') {\n          await addHost(this.form)\n          this.$message.success('添加成功')\n        } else {\n          await updateHost(this.form)\n          this.$message.success('更新成功')\n        }\n        \n        this.$emit('success')\n      } catch (error) {\n        console.error(error)\n      }\n      this.submitting = false\n    },\n    handleClose() {\n      this.$refs.form.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form-tip {\n  margin-top: 5px;\n}\n</style> "
        }
    ]
}