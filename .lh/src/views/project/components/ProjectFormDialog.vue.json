{
    "sourceFile": "src/views/project/components/ProjectFormDialog.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848406909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848406909,
            "name": "Commit-0",
            "content": "<template>\n  <el-dialog\n    :title=\"type === 'add' ? '新增项目' : '编辑项目'\"\n    :visible.sync=\"dialogVisible\"\n    width=\"600px\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"form\"\n      :model=\"form\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      v-loading=\"loading\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入项目名称\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"仓库类型\" prop=\"repoType\">\n        <el-radio-group v-model=\"form.repoType\">\n          <el-radio label=\"git\">Git</el-radio>\n          <el-radio label=\"svn\">SVN</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"仓库地址\" prop=\"repoUrl\">\n        <el-input v-model=\"form.repoUrl\" placeholder=\"请输入仓库地址\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"认证信息\" prop=\"authId\">\n        <el-select \n          v-model=\"form.authId\" \n          placeholder=\"请选择认证信息\"\n          filterable\n        >\n          <el-option\n            v-for=\"item in authOptions\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\"\n          ></el-option>\n        </el-select>\n        <div class=\"form-tip\">\n          <el-link type=\"primary\" @click=\"handleAddAuth\">新增认证信息</el-link>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"默认分支\" prop=\"branch\">\n        <el-input v-model=\"form.branch\" placeholder=\"请输入默认分支\">\n          <template slot=\"prepend\">{{ form.repoType === 'git' ? 'refs/heads/' : 'trunk/' }}</template>\n        </el-input>\n        <div class=\"form-tip\">Git项目填写分支名称，SVN项目填写标签路径</div>\n      </el-form-item>\n      <el-form-item label=\"构建命令\" prop=\"buildCommand\">\n        <el-input\n          v-model=\"form.buildCommand\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入构建命令\"\n        ></el-input>\n        <div class=\"form-tip\">多条命令使用换行分隔</div>\n      </el-form-item>\n      <el-form-item label=\"制品目录\" prop=\"artifactPath\">\n        <el-input v-model=\"form.artifactPath\" placeholder=\"请输入制品目录\">\n          <template slot=\"prepend\">/</template>\n        </el-input>\n        <div class=\"form-tip\">构建产物的目录，相对于项目根目录</div>\n      </el-form-item>\n      <el-form-item label=\"排除文件\" prop=\"excludes\">\n        <el-input\n          v-model=\"form.excludes\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入要排除的文件\"\n        ></el-input>\n        <div class=\"form-tip\">使用.gitignore语法，每行一个规则</div>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input\n          v-model=\"form.remark\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入备注\"\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n        确 定\n      </el-button>\n    </div>\n\n    <!-- 新增认证信息弹窗 -->\n    <password-form-dialog\n      :visible.sync=\"passwordDialog.visible\"\n      type=\"add\"\n      @success=\"handleAuthSuccess\"\n    ></password-form-dialog>\n  </el-dialog>\n</template>\n\n<script>\nimport { addProject, updateProject } from '@/api/project'\nimport { getPasswordList } from '@/api/password'\nimport PasswordFormDialog from '@/views/password/components/PasswordFormDialog.vue'\n\nexport default {\n  name: 'ProjectFormDialog',\n  components: {\n    PasswordFormDialog\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    },\n    data: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      loading: false,\n      submitting: false,\n      form: {\n        name: '',\n        repoType: 'git',\n        repoUrl: '',\n        authId: '',\n        branch: '',\n        buildCommand: '',\n        artifactPath: '',\n        excludes: '',\n        remark: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入项目名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        repoType: [\n          { required: true, message: '请选择仓库类型', trigger: 'change' }\n        ],\n        repoUrl: [\n          { required: true, message: '请输入仓库地址', trigger: 'blur' }\n        ],\n        authId: [\n          { required: true, message: '请选择认证信息', trigger: 'change' }\n        ],\n        branch: [\n          { required: true, message: '请输入默认分支', trigger: 'blur' }\n        ],\n        buildCommand: [\n          { required: true, message: '请输入构建命令', trigger: 'blur' }\n        ],\n        artifactPath: [\n          { required: true, message: '请输入制品目录', trigger: 'blur' }\n        ]\n      },\n      authOptions: [],\n      passwordDialog: {\n        visible: false\n      }\n    }\n  },\n  watch: {\n    visible(val) {\n      this.dialogVisible = val\n      if (val) {\n        this.getAuthList()\n      }\n    },\n    dialogVisible(val) {\n      this.$emit('update:visible', val)\n    },\n    data: {\n      handler(val) {\n        if (val) {\n          this.form = { ...val }\n        } else {\n          this.resetForm()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async getAuthList() {\n      try {\n        const { data } = await getPasswordList()\n        this.authOptions = data.list\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    resetForm() {\n      this.form = {\n        name: '',\n        repoType: 'git',\n        repoUrl: '',\n        authId: '',\n        branch: '',\n        buildCommand: '',\n        artifactPath: '',\n        excludes: '',\n        remark: ''\n      }\n    },\n    handleAddAuth() {\n      this.passwordDialog.visible = true\n    },\n    async handleAuthSuccess() {\n      this.passwordDialog.visible = false\n      await this.getAuthList()\n      this.$message.success('添加成功')\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.form.validate()\n        this.submitting = true\n        \n        if (this.type === 'add') {\n          await addProject(this.form)\n          this.$message.success('添加成功')\n        } else {\n          await updateProject(this.form)\n          this.$message.success('更新成功')\n        }\n        \n        this.$emit('success')\n      } catch (error) {\n        console.error(error)\n      }\n      this.submitting = false\n    },\n    handleClose() {\n      this.$refs.form.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  line-height: 1.2;\n  padding-top: 4px;\n}\n</style> "
        }
    ]
}