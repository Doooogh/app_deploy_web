{
    "sourceFile": "src/views/project/components/VersionFormDialog.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848490626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848490626,
            "name": "Commit-0",
            "content": "<template>\n  <el-dialog\n    title=\"新增版本\"\n    :visible.sync=\"dialogVisible\"\n    width=\"600px\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"form\"\n      :model=\"form\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      v-loading=\"loading\"\n    >\n      <el-form-item label=\"版本号\" prop=\"version\">\n        <el-input v-model=\"form.version\" placeholder=\"请输入版本号\"></el-input>\n        <div class=\"form-tip\">建议使用语义化版本号，如：1.0.0</div>\n      </el-form-item>\n      <el-form-item label=\"分支/标签\" prop=\"branch\">\n        <el-select \n          v-model=\"form.branch\"\n          placeholder=\"请选择分支/标签\"\n          filterable\n          :loading=\"branchLoading\"\n        >\n          <el-option\n            v-for=\"item in branchOptions\"\n            :key=\"item.name\"\n            :label=\"item.name\"\n            :value=\"item.name\"\n          >\n            <span>{{ item.name }}</span>\n            <span class=\"branch-commit\">{{ item.commit }}</span>\n          </el-option>\n        </el-select>\n        <div class=\"form-tip\">\n          <el-link type=\"primary\" @click=\"handleRefreshBranch\">刷新列表</el-link>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input\n          v-model=\"form.remark\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入备注\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"自动构建\">\n        <el-switch v-model=\"form.autoBuild\"></el-switch>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n        确 定\n      </el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { addVersion, getBranchList } from '@/api/project'\n\nexport default {\n  name: 'VersionFormDialog',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    projectId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    const validateVersion = (rule, value, callback) => {\n      if (!/^\\d+\\.\\d+\\.\\d+(?:-[a-zA-Z0-9]+)?$/.test(value)) {\n        callback(new Error('版本号格式不正确'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      dialogVisible: false,\n      loading: false,\n      submitting: false,\n      branchLoading: false,\n      form: {\n        version: '',\n        branch: '',\n        remark: '',\n        autoBuild: true\n      },\n      rules: {\n        version: [\n          { required: true, message: '请输入版本号', trigger: 'blur' },\n          { validator: validateVersion, trigger: 'blur' }\n        ],\n        branch: [\n          { required: true, message: '请选择分支/标签', trigger: 'change' }\n        ]\n      },\n      branchOptions: []\n    }\n  },\n  watch: {\n    visible(val) {\n      this.dialogVisible = val\n      if (val) {\n        this.getBranchList()\n      }\n    },\n    dialogVisible(val) {\n      this.$emit('update:visible', val)\n    }\n  },\n  methods: {\n    async getBranchList() {\n      this.branchLoading = true\n      try {\n        const { data } = await getBranchList(this.projectId)\n        this.branchOptions = data\n      } catch (error) {\n        console.error(error)\n      }\n      this.branchLoading = false\n    },\n    handleRefreshBranch() {\n      this.getBranchList()\n    },\n    resetForm() {\n      this.form = {\n        version: '',\n        branch: '',\n        remark: '',\n        autoBuild: true\n      }\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.form.validate()\n        this.submitting = true\n        \n        await addVersion({\n          ...this.form,\n          projectId: this.projectId\n        })\n        this.$message.success('添加成功')\n        this.$emit('success')\n      } catch (error) {\n        console.error(error)\n      }\n      this.submitting = false\n    },\n    handleClose() {\n      this.$refs.form.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  line-height: 1.2;\n  padding-top: 4px;\n}\n\n.branch-commit {\n  float: right;\n  color: #909399;\n  font-size: 12px;\n}\n</style> "
        }
    ]
}