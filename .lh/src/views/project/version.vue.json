{
    "sourceFile": "src/views/project/version.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848490644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848490644,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"page-container\">\n    <div class=\"project-info info-card\">\n      <div class=\"info-card__title\">项目信息</div>\n      <el-descriptions :column=\"3\" border>\n        <el-descriptions-item label=\"项目名称\">{{ project.name }}</el-descriptions-item>\n        <el-descriptions-item label=\"仓库类型\">{{ project.repoType === 'git' ? 'Git' : 'SVN' }}</el-descriptions-item>\n        <el-descriptions-item label=\"默认分支\">{{ project.branch }}</el-descriptions-item>\n        <el-descriptions-item label=\"仓库地址\">{{ project.repoUrl }}</el-descriptions-item>\n        <el-descriptions-item label=\"版本数量\">{{ project.versionCount }}</el-descriptions-item>\n        <el-descriptions-item label=\"部署次数\">{{ project.deployCount }}</el-descriptions-item>\n      </el-descriptions>\n    </div>\n\n    <div class=\"operation-group\">\n      <el-button type=\"primary\" @click=\"handleAdd\">新增版本</el-button>\n      <el-button type=\"danger\" :disabled=\"!selectedIds.length\" @click=\"handleBatchDelete\">批量删除</el-button>\n    </div>\n\n    <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n      <el-table-column prop=\"version\" label=\"版本号\" min-width=\"120\"></el-table-column>\n      <el-table-column prop=\"branch\" label=\"分支/标签\" width=\"120\"></el-table-column>\n      <el-table-column prop=\"commit\" label=\"Commit ID\" width=\"100\" show-overflow-tooltip></el-table-column>\n      <el-table-column prop=\"buildStatus\" label=\"构建状态\" width=\"100\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getBuildStatusType(scope.row.buildStatus)\">\n            {{ getBuildStatusText(scope.row.buildStatus) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"buildTime\" label=\"构建时间\" width=\"100\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"artifactSize\" label=\"制品大小\" width=\"100\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"creator\" label=\"创建人\" width=\"120\"></el-table-column>\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"300\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button \n            type=\"text\" \n            @click=\"handleBuild(scope.row)\"\n            :disabled=\"scope.row.buildStatus === 1\"\n          >构建</el-button>\n          <el-button \n            type=\"text\" \n            @click=\"handleLog(scope.row)\"\n            v-if=\"scope.row.buildStatus !== 0\"\n          >构建日志</el-button>\n          <el-button \n            type=\"text\" \n            @click=\"handleDownload(scope.row)\"\n            :disabled=\"scope.row.buildStatus !== 2\"\n          >下载制品</el-button>\n          <el-button type=\"text\" @click=\"handleDeploy(scope.row)\">发布</el-button>\n          <el-button \n            type=\"text\" \n            class=\"danger\" \n            @click=\"handleDelete(scope.row)\"\n            :disabled=\"scope.row.buildStatus === 1\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      :current-page=\"page.current\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :page-size=\"page.size\"\n      :total=\"page.total\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    ></el-pagination>\n\n    <!-- 新增版本弹窗 -->\n    <version-form-dialog\n      :visible.sync=\"formDialog.visible\"\n      :project-id=\"projectId\"\n      @success=\"handleFormSuccess\"\n    ></version-form-dialog>\n\n    <!-- 构建日志弹窗 -->\n    <el-dialog\n      :title=\"`构建日志 - ${currentVersion.version}`\"\n      :visible.sync=\"logDialog.visible\"\n      width=\"800px\"\n      :close-on-click-modal=\"false\"\n      custom-class=\"log-dialog\"\n    >\n      <div class=\"log-content\" v-loading=\"logDialog.loading\">\n        <pre>{{ logDialog.content }}</pre>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { \n  getProject,\n  getVersionList, \n  deleteVersion,\n  batchDeleteVersion,\n  buildVersion,\n  getBuildLog,\n  downloadArtifact\n} from '@/api/project'\nimport VersionFormDialog from './components/VersionFormDialog.vue'\n\nexport default {\n  name: 'ProjectVersion',\n  components: {\n    VersionFormDialog\n  },\n  data() {\n    return {\n      projectId: this.$route.params.id,\n      project: {},\n      loading: false,\n      tableData: [],\n      selectedIds: [],\n      page: {\n        current: 1,\n        size: 10,\n        total: 0\n      },\n      formDialog: {\n        visible: false\n      },\n      logDialog: {\n        visible: false,\n        loading: false,\n        content: '',\n      },\n      currentVersion: {}\n    }\n  },\n  created() {\n    this.getProjectInfo()\n    this.getList()\n  },\n  methods: {\n    async getProjectInfo() {\n      try {\n        const { data } = await getProject(this.projectId)\n        this.project = data\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async getList() {\n      this.loading = true\n      try {\n        const { data } = await getVersionList({\n          projectId: this.projectId,\n          page: this.page.current,\n          size: this.page.size\n        })\n        this.tableData = data.list\n        this.page.total = data.total\n      } catch (error) {\n        console.error(error)\n      }\n      this.loading = false\n    },\n    getBuildStatusType(status) {\n      const map = {\n        0: 'info',    // 未构建\n        1: '',        // 构建中\n        2: 'success', // 构建成功\n        3: 'danger'   // 构建失败\n      }\n      return map[status]\n    },\n    getBuildStatusText(status) {\n      const map = {\n        0: '未构建',\n        1: '构建中',\n        2: '成功',\n        3: '失败'\n      }\n      return map[status]\n    },\n    handleSelectionChange(selection) {\n      this.selectedIds = selection.map(item => item.id)\n    },\n    handleAdd() {\n      this.formDialog.visible = true\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该版本?', '提示', {\n          type: 'warning'\n        })\n        await deleteVersion(row.id)\n        this.$message.success('删除成功')\n        this.getList()\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async handleBatchDelete() {\n      try {\n        await this.$confirm(`确认删除选中的 ${this.selectedIds.length} 个版本?`, '提示', {\n          type: 'warning'\n        })\n        await batchDeleteVersion(this.selectedIds)\n        this.$message.success('删除成功')\n        this.getList()\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async handleBuild(row) {\n      try {\n        await this.$confirm('确认开始构建?', '提示', {\n          type: 'warning'\n        })\n        await buildVersion(row.id)\n        this.$message.success('开始构建')\n        this.getList()\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async handleLog(row) {\n      this.currentVersion = row\n      this.logDialog.visible = true\n      this.logDialog.loading = true\n      try {\n        const { data } = await getBuildLog(row.id)\n        this.logDialog.content = data\n      } catch (error) {\n        console.error(error)\n      }\n      this.logDialog.loading = false\n    },\n    handleDownload(row) {\n      downloadArtifact(row.id)\n    },\n    handleDeploy(row) {\n      this.$router.push({\n        path: '/deploy/create',\n        query: {\n          projectId: this.projectId,\n          versionId: row.id\n        }\n      })\n    },\n    handleFormSuccess() {\n      this.formDialog.visible = false\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.page.size = val\n      this.getList()\n    },\n    handleCurrentChange(val) {\n      this.page.current = val\n      this.getList()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.project-info {\n  margin-bottom: 20px;\n}\n\n.danger {\n  color: $--color-danger;\n}\n\n.log-dialog {\n  :deep(.el-dialog__body) {\n    padding: 0;\n  }\n}\n\n.log-content {\n  height: 500px;\n  padding: 10px;\n  background-color: #1e1e1e;\n  color: #fff;\n  font-family: Consolas, Monaco, monospace;\n  overflow: auto;\n\n  pre {\n    margin: 0;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n}\n</style> "
        }
    ]
}