{
    "sourceFile": "src/views/deploy/create.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848765999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848765999,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"page-container\">\n    <el-steps :active=\"currentStep\" finish-status=\"success\" class=\"deploy-steps\">\n      <el-step title=\"选择环境\"></el-step>\n      <el-step title=\"选择主机\"></el-step>\n      <el-step title=\"配置脚本\"></el-step>\n      <el-step title=\"确认信息\"></el-step>\n    </el-steps>\n\n    <div class=\"step-content\">\n      <!-- 步骤1：选择环境 -->\n      <div v-show=\"currentStep === 0\">\n        <el-form ref=\"envForm\" :model=\"form\" label-width=\"100px\">\n          <el-form-item label=\"发布环境\" prop=\"envId\" :rules=\"{ required: true, message: '请选择环境', trigger: 'change' }\">\n            <el-select \n              v-model=\"form.envId\" \n              placeholder=\"请选择环境\"\n              style=\"width: 300px\"\n              @change=\"handleEnvChange\"\n            >\n              <el-option\n                v-for=\"item in envOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n                :disabled=\"item.status !== 1\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"项目\" prop=\"projectId\" :rules=\"{ required: true, message: '请选择项目', trigger: 'change' }\">\n            <el-select \n              v-model=\"form.projectId\" \n              placeholder=\"请选择项目\"\n              style=\"width: 300px\"\n              @change=\"handleProjectChange\"\n            >\n              <el-option\n                v-for=\"item in projectOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"版本\" prop=\"versionId\" :rules=\"{ required: true, message: '请选择版本', trigger: 'change' }\">\n            <el-select \n              v-model=\"form.versionId\" \n              placeholder=\"请选择版本\"\n              style=\"width: 300px\"\n              :loading=\"versionLoading\"\n            >\n              <el-option\n                v-for=\"item in versionOptions\"\n                :key=\"item.id\"\n                :label=\"`${item.version} (${item.branch})`\"\n                :value=\"item.id\"\n                :disabled=\"item.buildStatus !== 2\"\n              >\n                <span>{{ item.version }}</span>\n                <span class=\"version-branch\">({{ item.branch }})</span>\n                <el-tag \n                  size=\"mini\" \n                  :type=\"item.buildStatus === 2 ? 'success' : 'danger'\"\n                >{{ item.buildStatus === 2 ? '构建成功' : '构建失败' }}</el-tag>\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 步骤2：选择主机 -->\n      <div v-show=\"currentStep === 1\">\n        <el-transfer\n          v-model=\"form.hostIds\"\n          :data=\"hostList\"\n          :titles=\"['可选主机', '已选主机']\"\n          :props=\"{\n            key: 'id',\n            label: item => `${item.name}(${item.ip})`\n          }\"\n          :filter-method=\"filterHost\"\n          filterable\n        ></el-transfer>\n      </div>\n\n      <!-- 步骤3：配置脚本 -->\n      <div v-show=\"currentStep === 2\">\n        <el-form ref=\"scriptForm\" :model=\"form\" label-width=\"100px\">\n          <el-form-item label=\"部署目录\" prop=\"deployPath\" :rules=\"{ required: true, message: '请输入部署目录', trigger: 'blur' }\">\n            <el-input v-model=\"form.deployPath\" placeholder=\"请输入部署目录\">\n              <template slot=\"prepend\">/</template>\n            </el-input>\n            <div class=\"form-tip\">部署包将解压到该目录下</div>\n          </el-form-item>\n          <el-form-item label=\"前置脚本\">\n            <div class=\"script-list\">\n              <draggable v-model=\"form.beforeScripts\" handle=\".drag-handle\">\n                <div \n                  v-for=\"(script, index) in form.beforeScripts\" \n                  :key=\"index\"\n                  class=\"script-item\"\n                >\n                  <i class=\"el-icon-rank drag-handle\"></i>\n                  <el-select \n                    v-model=\"script.id\" \n                    placeholder=\"请选择脚本\"\n                    style=\"width: 200px\"\n                    filterable\n                  >\n                    <el-option\n                      v-for=\"item in scriptOptions\"\n                      :key=\"item.id\"\n                      :label=\"item.name\"\n                      :value=\"item.id\"\n                    ></el-option>\n                  </el-select>\n                  <el-input\n                    v-if=\"getScriptById(script.id)?.params?.length\"\n                    v-model=\"script.params\"\n                    placeholder=\"请输入参数，多个参数用空格分隔\"\n                    style=\"width: 300px; margin: 0 10px\"\n                  ></el-input>\n                  <el-button \n                    type=\"text\" \n                    icon=\"el-icon-delete\"\n                    @click=\"handleDeleteScript('before', index)\"\n                  ></el-button>\n                </div>\n              </draggable>\n              <el-button \n                type=\"dashed\" \n                class=\"add-script\" \n                @click=\"handleAddScript('before')\"\n              >\n                <i class=\"el-icon-plus\"></i>\n                添加脚本\n              </el-button>\n            </div>\n          </el-form-item>\n          <el-form-item label=\"后置脚本\">\n            <div class=\"script-list\">\n              <draggable v-model=\"form.afterScripts\" handle=\".drag-handle\">\n                <div \n                  v-for=\"(script, index) in form.afterScripts\" \n                  :key=\"index\"\n                  class=\"script-item\"\n                >\n                  <i class=\"el-icon-rank drag-handle\"></i>\n                  <el-select \n                    v-model=\"script.id\" \n                    placeholder=\"请选择脚本\"\n                    style=\"width: 200px\"\n                    filterable\n                  >\n                    <el-option\n                      v-for=\"item in scriptOptions\"\n                      :key=\"item.id\"\n                      :label=\"item.name\"\n                      :value=\"item.id\"\n                    ></el-option>\n                  </el-select>\n                  <el-input\n                    v-if=\"getScriptById(script.id)?.params?.length\"\n                    v-model=\"script.params\"\n                    placeholder=\"请输入参数，多个参数用空格分隔\"\n                    style=\"width: 300px; margin: 0 10px\"\n                  ></el-input>\n                  <el-button \n                    type=\"text\" \n                    icon=\"el-icon-delete\"\n                    @click=\"handleDeleteScript('after', index)\"\n                  ></el-button>\n                </div>\n              </draggable>\n              <el-button \n                type=\"dashed\" \n                class=\"add-script\" \n                @click=\"handleAddScript('after')\"\n              >\n                <i class=\"el-icon-plus\"></i>\n                添加脚本\n              </el-button>\n            </div>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 步骤4：确认信息 -->\n      <div v-show=\"currentStep === 3\">\n        <el-descriptions title=\"发布信息\" :column=\"2\" border>\n          <el-descriptions-item label=\"发布环境\">{{ getEnvName }}</el-descriptions-item>\n          <el-descriptions-item label=\"项目\">{{ getProjectName }}</el-descriptions-item>\n          <el-descriptions-item label=\"版本\">{{ getVersionName }}</el-descriptions-item>\n          <el-descriptions-item label=\"部署目录\">/{{ form.deployPath }}</el-descriptions-item>\n        </el-descriptions>\n\n        <el-descriptions title=\"部署主机\" :column=\"1\" border class=\"mt20\">\n          <el-descriptions-item :label=\"`已选择 ${form.hostIds.length} 台主机`\">\n            <el-tag \n              v-for=\"host in selectedHosts\" \n              :key=\"host.id\"\n              class=\"host-tag\"\n            >{{ host.name }}({{ host.ip }})</el-tag>\n          </el-descriptions-item>\n        </el-descriptions>\n\n        <el-descriptions title=\"执行脚本\" :column=\"1\" border class=\"mt20\">\n          <el-descriptions-item label=\"前置脚本\">\n            <template v-if=\"form.beforeScripts.length\">\n              <div \n                v-for=\"(script, index) in form.beforeScripts\" \n                :key=\"index\"\n                class=\"script-info\"\n              >\n                {{ index + 1 }}. {{ getScriptById(script.id)?.name }}\n                <span v-if=\"script.params\" class=\"script-params\">\n                  参数：{{ script.params }}\n                </span>\n              </div>\n            </template>\n            <span v-else>无</span>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"后置脚本\">\n            <template v-if=\"form.afterScripts.length\">\n              <div \n                v-for=\"(script, index) in form.afterScripts\" \n                :key=\"index\"\n                class=\"script-info\"\n              >\n                {{ index + 1 }}. {{ getScriptById(script.id)?.name }}\n                <span v-if=\"script.params\" class=\"script-params\">\n                  参数：{{ script.params }}\n                </span>\n              </div>\n            </template>\n            <span v-else>无</span>\n          </el-descriptions-item>\n        </el-descriptions>\n      </div>\n    </div>\n\n    <div class=\"step-footer\">\n      <el-button @click=\"handlePrev\" v-if=\"currentStep > 0\">上一步</el-button>\n      <el-button \n        type=\"primary\" \n        @click=\"handleNext\"\n        :loading=\"loading\"\n      >{{ currentStep === 3 ? '开始发布' : '下一步' }}</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getEnvironmentList } from '@/api/environment'\nimport { getProjectList, getVersionList } from '@/api/project'\nimport { getHostList } from '@/api/host'\nimport { getScriptList, createDeploy } from '@/api/deploy'\nimport draggable from 'vuedraggable'\n\nexport default {\n  name: 'DeployCreate',\n  components: {\n    draggable\n  },\n  data() {\n    return {\n      currentStep: 0,\n      loading: false,\n      versionLoading: false,\n      form: {\n        envId: '',\n        projectId: '',\n        versionId: '',\n        hostIds: [],\n        deployPath: '',\n        beforeScripts: [],\n        afterScripts: []\n      },\n      envOptions: [],\n      projectOptions: [],\n      versionOptions: [],\n      hostList: [],\n      scriptOptions: []\n    }\n  },\n  computed: {\n    selectedHosts() {\n      return this.hostList.filter(item => this.form.hostIds.includes(item.id))\n    },\n    getEnvName() {\n      const env = this.envOptions.find(item => item.id === this.form.envId)\n      return env?.name\n    },\n    getProjectName() {\n      const project = this.projectOptions.find(item => item.id === this.form.projectId)\n      return project?.name\n    },\n    getVersionName() {\n      const version = this.versionOptions.find(item => item.id === this.form.versionId)\n      return version ? `${version.version} (${version.branch})` : ''\n    }\n  },\n  created() {\n    this.getEnvList()\n    this.getProjectList()\n    this.getScriptList()\n\n    // 如果URL中有projectId和versionId，自动选中\n    const { projectId, versionId } = this.$route.query\n    if (projectId) {\n      this.form.projectId = Number(projectId)\n      if (versionId) {\n        this.form.versionId = Number(versionId)\n      }\n    }\n  },\n  methods: {\n    async getEnvList() {\n      try {\n        const { data } = await getEnvironmentList()\n        this.envOptions = data.filter(item => item.status === 1)\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async getProjectList() {\n      try {\n        const { data } = await getProjectList()\n        this.projectOptions = data.list\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async getVersionList() {\n      if (!this.form.projectId) return\n      this.versionLoading = true\n      try {\n        const { data } = await getVersionList({\n          projectId: this.form.projectId,\n          buildStatus: 2\n        })\n        this.versionOptions = data.list\n      } catch (error) {\n        console.error(error)\n      }\n      this.versionLoading = false\n    },\n    async getHostList() {\n      if (!this.form.envId) return\n      try {\n        const { data } = await getHostList({\n          envId: this.form.envId,\n          status: 1\n        })\n        this.hostList = data.list\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async getScriptList() {\n      try {\n        const { data } = await getScriptList()\n        this.scriptOptions = data.list\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    handleEnvChange() {\n      this.form.hostIds = []\n      this.getHostList()\n    },\n    handleProjectChange() {\n      this.form.versionId = ''\n      this.getVersionList()\n    },\n    getScriptById(id) {\n      return this.scriptOptions.find(item => item.id === id)\n    },\n    handleAddScript(type) {\n      this.form[`${type}Scripts`].push({\n        id: '',\n        params: ''\n      })\n    },\n    handleDeleteScript(type, index) {\n      this.form[`${type}Scripts`].splice(index, 1)\n    },\n    filterHost(query, item) {\n      return item.name.toLowerCase().includes(query.toLowerCase()) ||\n        item.ip.includes(query)\n    },\n    async handleNext() {\n      if (this.currentStep === 0) {\n        try {\n          await this.$refs.envForm.validate()\n          this.currentStep++\n        } catch (error) {\n          return\n        }\n      } else if (this.currentStep === 1) {\n        if (!this.form.hostIds.length) {\n          this.$message.warning('请选择至少一台主机')\n          return\n        }\n        this.currentStep++\n      } else if (this.currentStep === 2) {\n        try {\n          await this.$refs.scriptForm.validate()\n          this.currentStep++\n        } catch (error) {\n          return\n        }\n      } else if (this.currentStep === 3) {\n        await this.handleDeploy()\n      }\n    },\n    handlePrev() {\n      this.currentStep--\n    },\n    async handleDeploy() {\n      try {\n        this.loading = true\n        await createDeploy(this.form)\n        this.$message.success('发布单创建成功')\n        this.$router.push('/deploy/history')\n      } catch (error) {\n        console.error(error)\n      }\n      this.loading = false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.deploy-steps {\n  margin-bottom: 30px;\n}\n\n.step-content {\n  min-height: 400px;\n  padding: 20px;\n}\n\n.step-footer {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.version-branch {\n  color: #909399;\n  margin: 0 10px;\n}\n\n.script-list {\n  .script-item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n\n    .drag-handle {\n      cursor: move;\n      margin-right: 10px;\n      color: #909399;\n    }\n  }\n}\n\n.add-script {\n  width: 100%;\n  border-style: dashed;\n}\n\n.mt20 {\n  margin-top: 20px;\n}\n\n.host-tag {\n  margin-right: 10px;\n  margin-bottom: 5px;\n}\n\n.script-info {\n  line-height: 1.8;\n\n  .script-params {\n    color: #909399;\n    margin-left: 10px;\n  }\n}\n\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  line-height: 1.2;\n  padding-top: 4px;\n}\n</style> "
        }
    ]
}