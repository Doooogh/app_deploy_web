{
    "sourceFile": "src/views/environment/components/EnvironmentFormDialog.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848213468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848213468,
            "name": "Commit-0",
            "content": "<template>\n  <el-dialog\n    :title=\"type === 'add' ? '新增环境' : '编辑环境'\"\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"form\"\n      :model=\"form\"\n      :rules=\"rules\"\n      label-width=\"80px\"\n      v-loading=\"loading\"\n    >\n      <el-form-item label=\"环境名称\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入环境名称\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"环境标识\" prop=\"code\">\n        <el-input \n          v-model=\"form.code\" \n          placeholder=\"请输入环境标识\"\n          :disabled=\"type === 'edit'\"\n        ></el-input>\n        <div class=\"form-tip\">环境标识一旦创建不可修改，将用于系统内部标识环境</div>\n      </el-form-item>\n      <el-form-item label=\"描述\" prop=\"description\">\n        <el-input\n          v-model=\"form.description\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入环境描述\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-radio-group v-model=\"form.status\">\n          <el-radio :label=\"1\">启用</el-radio>\n          <el-radio :label=\"0\">禁用</el-radio>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n        确 定\n      </el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { addEnvironment, updateEnvironment } from '@/api/environment'\n\nexport default {\n  name: 'EnvironmentFormDialog',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    },\n    data: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    const validateCode = (rule, value, callback) => {\n      if (!/^[a-z][a-z0-9_]*$/.test(value)) {\n        callback(new Error('环境标识只能包含小写字母、数字和下划线，且必须以字母开头'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      dialogVisible: false,\n      loading: false,\n      submitting: false,\n      form: {\n        name: '',\n        code: '',\n        description: '',\n        status: 1\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入环境名称', trigger: 'blur' },\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n        ],\n        code: [\n          { required: true, message: '请输入环境标识', trigger: 'blur' },\n          { validator: validateCode, trigger: 'blur' }\n        ],\n        description: [\n          { max: 200, message: '长度不能超过 200 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n    visible(val) {\n      this.dialogVisible = val\n    },\n    dialogVisible(val) {\n      this.$emit('update:visible', val)\n    },\n    data: {\n      handler(val) {\n        if (val) {\n          this.form = { ...val }\n        } else {\n          this.resetForm()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    resetForm() {\n      this.form = {\n        name: '',\n        code: '',\n        description: '',\n        status: 1\n      }\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.form.validate()\n        this.submitting = true\n        \n        if (this.type === 'add') {\n          await addEnvironment(this.form)\n          this.$message.success('添加成功')\n        } else {\n          await updateEnvironment(this.form)\n          this.$message.success('更新成功')\n        }\n        \n        this.$emit('success')\n      } catch (error) {\n        console.error(error)\n      }\n      this.submitting = false\n    },\n    handleClose() {\n      this.$refs.form.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  line-height: 1.2;\n  padding-top: 4px;\n}\n</style> "
        }
    ]
}