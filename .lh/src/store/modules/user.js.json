{
    "sourceFile": "src/store/modules/user.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731848073105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731848073105,
            "name": "Commit-0",
            "content": "import { login, logout, getInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  roles: []\n}\n\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles\n  }\n}\n\nconst actions = {\n  // 用户登录\n  login({ commit }, userInfo) {\n    const { username, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ username: username.trim(), password: password })\n        .then(response => {\n          const { data } = response\n          commit('SET_TOKEN', data.token)\n          setToken(data.token)\n          resolve()\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 获取用户信息\n  getInfo({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token)\n        .then(response => {\n          const { data } = response\n          if (!data) {\n            reject('验证失败，请重新登录。')\n          }\n          const { roles, name, avatar } = data\n          commit('SET_ROLES', roles)\n          commit('SET_NAME', name)\n          commit('SET_AVATAR', avatar)\n          resolve(data)\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 用户登出\n  logout({ commit, state, dispatch }) {\n    return new Promise((resolve, reject) => {\n      logout(state.token)\n        .then(() => {\n          commit('SET_TOKEN', '')\n          commit('SET_ROLES', [])\n          removeToken()\n          resolve()\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 重置token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      removeToken()\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n} "
        }
    ]
}